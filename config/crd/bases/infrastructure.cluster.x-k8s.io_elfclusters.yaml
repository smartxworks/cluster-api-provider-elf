---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: elfclusters.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: ElfCluster
    listKind: ElfClusterList
    plural: elfclusters
    singular: elfcluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Cluster infrastructure is ready
      jsonPath: .status.ready
      name: Ready
      type: string
    - description: Tower is the address of the Tower endpoint
      jsonPath: .spec.tower.server
      name: Tower
      type: string
    - description: API Endpoint
      jsonPath: .spec.controlPlaneEndpoint
      name: ControlPlaneEndpoint
      priority: 1
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: ElfCluster is the Schema for the elfclusters API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ElfClusterSpec defines the desired state of ElfCluster.
            properties:
              cluster:
                description: Cluster is a unique identifier for a ELF cluster.
                type: string
              controlPlaneEndpoint:
                description: ControlPlaneEndpoint represents the endpoint used to
                  communicate with the control plane.
                properties:
                  host:
                    description: The hostname on which the API server is serving.
                    type: string
                  port:
                    description: The port on which the API server is serving.
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
              tower:
                description: Tower is the config of tower.
                properties:
                  authMode:
                    description: AuthMode is the authentication mode of tower server.
                    enum:
                    - LOCAL
                    - LDAP
                    type: string
                  password:
                    description: Password is the password used to access the tower
                      server.
                    type: string
                  server:
                    description: Server is address of the tower server.
                    type: string
                  username:
                    description: Username is the name used to log into the tower server.
                    type: string
                type: object
            type: object
          status:
            description: ElfClusterStatus defines the observed state of ElfCluster.
            properties:
              conditions:
                description: Conditions defines current service state of the ElfCluster.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              ready:
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
